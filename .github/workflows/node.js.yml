name: Deployement

on:
  push:
    branches: ['main']
  pull_request:
    branches: ['main']

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest

    strategy:
      matrix:
        node-version: [20.x]

    steps:
      - uses: actions/checkout@v4
      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.node-version }}

      - name: Install client dependencies
        run: |
          cd client
          npm install

      - name: Build ReactJS app
        run: |
          cd client
          npm run build

      - name: Set up SSH agent
        run: |
          mkdir -p ~/.ssh
          echo "${{ secrets.SERVER_SSH_KEY }}" > ~/.ssh/id_rsa
          chmod 600 ~/.ssh/id_rsa
          eval $(ssh-agent -s)
          ssh-add ~/.ssh/id_rsa

      - name: scp Client APP
        uses: c0c1/scp-action@v1.0
        with:
          src: 'client/dist'
          host: ${{ secrets.SERVER_HOST }}
          remote: '/var/www/html'
          user: ${{ secrets.SERVER_USERNAME }}
          key: ${{ secrets.SERVER_SSH_KEY }}

      - name: scp Server APP
        uses: c0c1/scp-action@v1.0
        with:
          src: 'server'
          host: ${{ secrets.SERVER_HOST }}
          remote: '/var/www/html/server'
          user: ${{ secrets.SERVER_USERNAME }}
          key: ${{ secrets.SERVER_SSH_KEY }}
          excludes: 'node_modules'

      - name: ssh pipelines
        uses: cross-the-world/ssh-pipeline@master
        env:
          WELCOME: 'ssh pipeline'
        with:
          host: ${{ secrets.SERVER_HOST }}
          user: ${{ secrets.SERVER_USERNAME }}
          key: ${{ secrets.SERVER_SSH_KEY }}
          port: ${{ secrets.SERVER_PORT }}
          connect_timeout: 10s
          script: |
            cd /var/www/html/server
            npm install --production
            service caddy restart
